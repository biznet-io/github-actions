name: 'Setup Working Directory'
description: 'Sets up the working directory for the job'

inputs:
  PATH:
    description: 'Path where the working directory should be created'
    default: ''
    required: false
  BRANCH_NAME:
    description: 'Branch name to use in the working directory path (defaults to GITHUB_REF if not provided)'
    default: ''
    required: false

runs:
  using: 'composite'
  steps:
    - id: set_working_directory
      shell: bash
      run: |
        # Use the branch input if provided, otherwise fallback to GITHUB_REF
        BRANCH_NAME="${{ inputs.BRANCH_NAME || env.BRANCH_NAME }}"

        # Tmp - Define the getSlug function (copied from init-cache.sh)
        function getSlug {
          local name=$1
          # Step 1: Convert to lowercase
          local nameLower=$(echo "$name" | tr '[:upper:]' '[:lower:]')

          # Step 2: Replace all characters except 0-9 and a-z with a hyphen
          local slug=$(echo "$nameLower" | sed 's/[^a-z0-9]/-/g')

          # Step 3: Remove leading and trailing hyphens
          slug=$(echo "$slug" | sed 's/^-//' | sed 's/-$//')
          echo "$slug"
        }

        BRANCH_NAME=$(getSlug "$BRANCH_NAME")

        WORKING_DIRECTORY="${{ inputs.PATH || env.WORKING_DIRECTORY_PREFIX }}/${GITHUB_REPOSITORY}/branches/${BRANCH_NAME:-GITHUB_REF}"

        # Make sure the directory exists
        mkdir -p ${WORKING_DIRECTORY}
        echo "WORKING_DIRECTORY: ${WORKING_DIRECTORY}"

        # Set as default working directory for following steps
        echo "WORKING_DIRECTORY=${WORKING_DIRECTORY}" >> $GITHUB_ENV

        cd ${WORKING_DIRECTORY}
        echo "Working directory is: $(pwd)"
